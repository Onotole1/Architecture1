// Generated by Dagger (https://dagger.dev).
package ru.netology.nmedia.viewmodel;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import ru.netology.nmedia.auth.AppAuth;
import ru.netology.nmedia.repository.PostRepository;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PostViewModel_Factory implements Factory<PostViewModel> {
  private final Provider<PostRepository> repositoryProvider;

  private final Provider<AppAuth> authProvider;

  public PostViewModel_Factory(Provider<PostRepository> repositoryProvider,
      Provider<AppAuth> authProvider) {
    this.repositoryProvider = repositoryProvider;
    this.authProvider = authProvider;
  }

  @Override
  public PostViewModel get() {
    return newInstance(repositoryProvider.get(), authProvider.get());
  }

  public static PostViewModel_Factory create(Provider<PostRepository> repositoryProvider,
      Provider<AppAuth> authProvider) {
    return new PostViewModel_Factory(repositoryProvider, authProvider);
  }

  public static PostViewModel newInstance(PostRepository repository, AppAuth auth) {
    return new PostViewModel(repository, auth);
  }
}
