// Generated by Dagger (https://dagger.dev).
package ru.netology.nmedia.application;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import ru.netology.nmedia.auth.AppAuth;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NMediaApplication_MembersInjector implements MembersInjector<NMediaApplication> {
  private final Provider<AppAuth> authProvider;

  public NMediaApplication_MembersInjector(Provider<AppAuth> authProvider) {
    this.authProvider = authProvider;
  }

  public static MembersInjector<NMediaApplication> create(Provider<AppAuth> authProvider) {
    return new NMediaApplication_MembersInjector(authProvider);
  }

  @Override
  public void injectMembers(NMediaApplication instance) {
    injectAuth(instance, authProvider.get());
  }

  @InjectedFieldSignature("ru.netology.nmedia.application.NMediaApplication.auth")
  public static void injectAuth(NMediaApplication instance, AppAuth auth) {
    instance.auth = auth;
  }
}
