// Generated by Dagger (https://dagger.dev).
package ru.netology.nmedia.ui;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import ru.netology.nmedia.auth.AppAuth;
import ru.netology.nmedia.repository.PostRepository;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppActivity_MembersInjector implements MembersInjector<AppActivity> {
  private final Provider<PostRepository> repositoryProvider;

  private final Provider<AppAuth> authProvider;

  public AppActivity_MembersInjector(Provider<PostRepository> repositoryProvider,
      Provider<AppAuth> authProvider) {
    this.repositoryProvider = repositoryProvider;
    this.authProvider = authProvider;
  }

  public static MembersInjector<AppActivity> create(Provider<PostRepository> repositoryProvider,
      Provider<AppAuth> authProvider) {
    return new AppActivity_MembersInjector(repositoryProvider, authProvider);
  }

  @Override
  public void injectMembers(AppActivity instance) {
    injectRepository(instance, repositoryProvider.get());
    injectAuth(instance, authProvider.get());
  }

  @InjectedFieldSignature("ru.netology.nmedia.ui.AppActivity.repository")
  public static void injectRepository(AppActivity instance, PostRepository repository) {
    instance.repository = repository;
  }

  @InjectedFieldSignature("ru.netology.nmedia.ui.AppActivity.auth")
  public static void injectAuth(AppActivity instance, AppAuth auth) {
    instance.auth = auth;
  }
}
