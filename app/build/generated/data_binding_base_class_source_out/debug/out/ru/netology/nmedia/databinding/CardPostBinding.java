// Generated by view binder compiler. Do not edit!
package ru.netology.nmedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.netology.nmedia.R;

public final class CardPostBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView author;

  @NonNull
  public final ImageView avatar;

  @NonNull
  public final TextView content;

  @NonNull
  public final Barrier footer;

  @NonNull
  public final Barrier header;

  @NonNull
  public final MaterialButton like;

  @NonNull
  public final MaterialButton menu;

  @NonNull
  public final TextView published;

  @NonNull
  public final MaterialButton share;

  private CardPostBinding(@NonNull MaterialCardView rootView, @NonNull TextView author,
      @NonNull ImageView avatar, @NonNull TextView content, @NonNull Barrier footer,
      @NonNull Barrier header, @NonNull MaterialButton like, @NonNull MaterialButton menu,
      @NonNull TextView published, @NonNull MaterialButton share) {
    this.rootView = rootView;
    this.author = author;
    this.avatar = avatar;
    this.content = content;
    this.footer = footer;
    this.header = header;
    this.like = like;
    this.menu = menu;
    this.published = published;
    this.share = share;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.author;
      TextView author = ViewBindings.findChildViewById(rootView, id);
      if (author == null) {
        break missingId;
      }

      id = R.id.avatar;
      ImageView avatar = ViewBindings.findChildViewById(rootView, id);
      if (avatar == null) {
        break missingId;
      }

      id = R.id.content;
      TextView content = ViewBindings.findChildViewById(rootView, id);
      if (content == null) {
        break missingId;
      }

      id = R.id.footer;
      Barrier footer = ViewBindings.findChildViewById(rootView, id);
      if (footer == null) {
        break missingId;
      }

      id = R.id.header;
      Barrier header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }

      id = R.id.like;
      MaterialButton like = ViewBindings.findChildViewById(rootView, id);
      if (like == null) {
        break missingId;
      }

      id = R.id.menu;
      MaterialButton menu = ViewBindings.findChildViewById(rootView, id);
      if (menu == null) {
        break missingId;
      }

      id = R.id.published;
      TextView published = ViewBindings.findChildViewById(rootView, id);
      if (published == null) {
        break missingId;
      }

      id = R.id.share;
      MaterialButton share = ViewBindings.findChildViewById(rootView, id);
      if (share == null) {
        break missingId;
      }

      return new CardPostBinding((MaterialCardView) rootView, author, avatar, content, footer,
          header, like, menu, published, share);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
